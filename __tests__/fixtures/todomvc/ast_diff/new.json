{
  "branch": "demo",
  "data": [
    {
      "filePath": "/js/Application.ts",
      "data": {
        "methods": [
          {
            "params": ["TodoStorage"],
            "name": "todomvc",
            "loc": {
              "start": { "line": 11, "column": 18 },
              "end": { "line": 16, "column": 48 }
            },
            "body": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "angular"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "module"
                                    },
                                    "computed": false,
                                    "optional": false
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "raw": "'todomvc'",
                                      "value": "todomvc"
                                    },
                                    {
                                      "type": "ArrayExpression",
                                      "elements": []
                                    }
                                  ],
                                  "optional": false
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "controller"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "raw": "'todoCtrl'",
                                  "value": "todoCtrl"
                                },
                                { "type": "Identifier", "name": "TodoCtrl" }
                              ],
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "directive"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "raw": "'todoBlur'",
                              "value": "todoBlur"
                            },
                            { "type": "Identifier", "name": "todoBlur" }
                          ],
                          "optional": false
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "directive"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "raw": "'todoFocus'",
                          "value": "todoFocus"
                        },
                        { "type": "Identifier", "name": "todoFocus" }
                      ],
                      "optional": false
                    },
                    "property": { "type": "Identifier", "name": "directive" },
                    "computed": false,
                    "optional": false
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "raw": "'todoEscape'",
                      "value": "todoEscape"
                    },
                    { "type": "Identifier", "name": "todoEscape" }
                  ],
                  "optional": false
                },
                "property": { "type": "Identifier", "name": "service" },
                "computed": false,
                "optional": false
              },
              "arguments": [
                {
                  "type": "Literal",
                  "raw": "'todoStorage'",
                  "value": "todoStorage"
                },
                { "type": "Identifier", "name": "TodoStorage" }
              ],
              "optional": false
            }
          }
        ]
      }
    },
    { "filePath": "/js/_all.ts", "data": { "methods": [] } },
    {
      "filePath": "/js/controllers/TodoCtrl.ts",
      "data": {
        "className": "TodoCtrl",
        "methods": [
          {
            "params": [],
            "statements": [],
            "name": "$inject",
            "loc": {
              "start": { "line": 18, "column": 2 },
              "end": { "line": 23, "column": 4 }
            },
            "body": {
              "type": "ClassProperty",
              "key": { "type": "Identifier", "name": "$inject" },
              "value": {
                "type": "ArrayExpression",
                "elements": [
                  { "type": "Literal", "raw": "\"$scope\"", "value": "$scope" },
                  {
                    "type": "Literal",
                    "raw": "\"$location\"",
                    "value": "$location"
                  },
                  {
                    "type": "Literal",
                    "raw": "\"todoStorage\"",
                    "value": "todoStorage"
                  },
                  {
                    "type": "Literal",
                    "raw": "\"filterFilter\"",
                    "value": "filterFilter"
                  }
                ]
              },
              "computed": false,
              "static": true,
              "declare": false,
              "accessibility": "public"
            }
          },
          {
            "params": [],
            "name": "constructor",
            "statements": [33, 35, 36, 40, 44, 45, 47, 48],
            "loc": {
              "start": { "line": 27, "column": 2 },
              "end": { "line": 49, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "constructor" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "private",
                    "parameter": {
                      "type": "Identifier",
                      "name": "$scope",
                      "typeAnnotation": {
                        "type": "TSTypeAnnotation",
                        "loc": {
                          "start": { "line": 28, "column": 17 },
                          "end": { "line": 28, "column": 29 }
                        },
                        "range": [891, 903],
                        "typeAnnotation": {
                          "type": "TSTypeReference",
                          "typeName": {
                            "type": "Identifier",
                            "name": "ITodoScope",
                            "range": [893, 903],
                            "loc": {
                              "start": { "line": 28, "column": 19 },
                              "end": { "line": 28, "column": 29 }
                            }
                          },
                          "range": [893, 903],
                          "loc": {
                            "start": { "line": 28, "column": 19 },
                            "end": { "line": 28, "column": 29 }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "private",
                    "parameter": {
                      "type": "Identifier",
                      "name": "$location",
                      "typeAnnotation": {
                        "type": "TSTypeAnnotation",
                        "loc": {
                          "start": { "line": 29, "column": 20 },
                          "end": { "line": 29, "column": 41 }
                        },
                        "range": [925, 946],
                        "typeAnnotation": {
                          "type": "TSTypeReference",
                          "typeName": {
                            "type": "TSQualifiedName",
                            "left": {
                              "type": "Identifier",
                              "name": "ng",
                              "range": [927, 929],
                              "loc": {
                                "start": { "line": 29, "column": 22 },
                                "end": { "line": 29, "column": 24 }
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "ILocationService",
                              "range": [930, 946],
                              "loc": {
                                "start": { "line": 29, "column": 25 },
                                "end": { "line": 29, "column": 41 }
                              }
                            },
                            "range": [927, 946],
                            "loc": {
                              "start": { "line": 29, "column": 22 },
                              "end": { "line": 29, "column": 41 }
                            }
                          },
                          "range": [927, 946],
                          "loc": {
                            "start": { "line": 29, "column": 22 },
                            "end": { "line": 29, "column": 41 }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "private",
                    "parameter": {
                      "type": "Identifier",
                      "name": "todoStorage",
                      "typeAnnotation": {
                        "type": "TSTypeAnnotation",
                        "loc": {
                          "start": { "line": 30, "column": 22 },
                          "end": { "line": 30, "column": 36 }
                        },
                        "range": [970, 984],
                        "typeAnnotation": {
                          "type": "TSTypeReference",
                          "typeName": {
                            "type": "Identifier",
                            "name": "ITodoStorage",
                            "range": [972, 984],
                            "loc": {
                              "start": { "line": 30, "column": 24 },
                              "end": { "line": 30, "column": 36 }
                            }
                          },
                          "range": [972, 984],
                          "loc": {
                            "start": { "line": 30, "column": 24 },
                            "end": { "line": 30, "column": 36 }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "private",
                    "parameter": {
                      "type": "Identifier",
                      "name": "filterFilter"
                    }
                  }
                ],
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": { "type": "ThisExpression" },
                          "property": { "type": "Identifier", "name": "todos" },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "todoStorage"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "get"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [],
                            "optional": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": {
                            "type": "Identifier",
                            "name": "newTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "raw": "\"\"",
                          "value": ""
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": {
                            "type": "Identifier",
                            "name": "editedTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": { "type": "Identifier", "name": "vm" },
                          "computed": false,
                          "optional": false
                        },
                        "right": { "type": "ThisExpression" }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": {
                            "type": "Identifier",
                            "name": "$watch"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "raw": "\"todos\"",
                            "value": "todos"
                          },
                          {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [],
                            "body": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "onTodos"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [],
                              "optional": false
                            },
                            "async": false,
                            "expression": true
                          },
                          { "type": "Literal", "value": true, "raw": "true" }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": {
                            "type": "Identifier",
                            "name": "$watch"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "raw": "\"location.path()\"",
                            "value": "location.path()"
                          },
                          {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "path" }
                            ],
                            "body": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "onPath"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                { "type": "Identifier", "name": "path" }
                              ],
                              "optional": false
                            },
                            "async": false,
                            "expression": true
                          }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "$location"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [],
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "raw": "\"\"",
                          "value": ""
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "$location"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            { "type": "Literal", "raw": "\"/\"", "value": "/" }
                          ],
                          "optional": false
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "$scope" },
                          "property": {
                            "type": "Identifier",
                            "name": "location"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": { "type": "Identifier", "name": "$location" }
                      }
                    }
                  ]
                }
              },
              "computed": false,
              "static": false,
              "kind": "constructor"
            }
          },
          {
            "params": ["path"],
            "name": "onPath",
            "statements": [52, 57],
            "loc": {
              "start": { "line": 51, "column": 2 },
              "end": { "line": 58, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "onPath" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "statusFilter"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "ConditionalExpression",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": { "type": "Identifier", "name": "path" },
                            "right": {
                              "type": "Literal",
                              "raw": "\"/active\"",
                              "value": "/active"
                            }
                          },
                          "consequent": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "completed"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": false,
                                  "raw": "false"
                                },
                                "computed": false,
                                "method": false,
                                "shorthand": false,
                                "kind": "init"
                              }
                            ]
                          },
                          "alternate": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": { "type": "Identifier", "name": "path" },
                              "right": {
                                "type": "Literal",
                                "raw": "\"/completed\"",
                                "value": "/completed"
                              }
                            },
                            "consequent": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "completed"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true,
                                    "raw": "true"
                                  },
                                  "computed": false,
                                  "method": false,
                                  "shorthand": false,
                                  "kind": "init"
                                }
                              ]
                            },
                            "alternate": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "path",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 51, "column": 13 },
                        "end": { "line": 51, "column": 21 }
                      },
                      "range": [1705, 1713],
                      "typeAnnotation": {
                        "type": "TSStringKeyword",
                        "range": [1707, 1713],
                        "loc": {
                          "start": { "line": 51, "column": 15 },
                          "end": { "line": 51, "column": 21 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": [],
            "name": "onTodos",
            "statements": [61, 63, 64, 65, 66],
            "loc": {
              "start": { "line": 60, "column": 2 },
              "end": { "line": 67, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "onTodos" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "remainingCount"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": { "type": "ThisExpression" },
                              "property": {
                                "type": "Identifier",
                                "name": "filterFilter"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "todos"
                                },
                                "computed": false,
                                "optional": false
                              },
                              {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "completed"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": false,
                                      "raw": "false"
                                    },
                                    "computed": false,
                                    "method": false,
                                    "shorthand": false,
                                    "kind": "init"
                                  }
                                ]
                              }
                            ],
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          },
                          "computed": false,
                          "optional": false
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "doneCount"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "-",
                          "left": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "MemberExpression",
                              "object": { "type": "ThisExpression" },
                              "property": {
                                "type": "Identifier",
                                "name": "todos"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "right": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "MemberExpression",
                              "object": { "type": "ThisExpression" },
                              "property": {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "remainingCount"
                            },
                            "computed": false,
                            "optional": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "allChecked"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "prefix": true,
                          "argument": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "MemberExpression",
                              "object": { "type": "ThisExpression" },
                              "property": {
                                "type": "Identifier",
                                "name": "$scope"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "remainingCount"
                            },
                            "computed": false,
                            "optional": false
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todoStorage"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": { "type": "Identifier", "name": "put" },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": []
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": [],
            "name": "addTodo",
            "statements": [70, 71, 73, 75, 76, 72],
            "loc": {
              "start": { "line": 69, "column": 2 },
              "end": { "line": 77, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "addTodo" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "newTodo",
                            "typeAnnotation": {
                              "type": "TSTypeAnnotation",
                              "loc": {
                                "start": { "line": 70, "column": 14 },
                                "end": { "line": 70, "column": 22 }
                              },
                              "range": [2185, 2193],
                              "typeAnnotation": {
                                "type": "TSStringKeyword",
                                "range": [2187, 2193],
                                "loc": {
                                  "start": { "line": 70, "column": 16 },
                                  "end": { "line": 70, "column": 22 }
                                }
                              }
                            }
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "MemberExpression",
                                  "object": { "type": "ThisExpression" },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "newTodo"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "trim"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [],
                            "optional": false
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "prefix": true,
                        "argument": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "newTodo" },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          },
                          "computed": false,
                          "optional": false
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          { "type": "ReturnStatement", "argument": null }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": { "type": "Identifier", "name": "push" },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "TodoItem"
                            },
                            "arguments": [
                              { "type": "Identifier", "name": "newTodo" },
                              {
                                "type": "Literal",
                                "value": false,
                                "raw": "false"
                              }
                            ]
                          }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "newTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "raw": "\"\"",
                          "value": ""
                        }
                      }
                    }
                  ]
                },
                "params": []
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["todoItem"],
            "name": "editTodo",
            "statements": [80, 83],
            "loc": {
              "start": { "line": 79, "column": 2 },
              "end": { "line": 84, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "editTodo" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "editedTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": { "type": "Identifier", "name": "todoItem" }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "originalTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "angular"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "extend"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [
                            { "type": "ObjectExpression", "properties": [] },
                            { "type": "Identifier", "name": "todoItem" }
                          ],
                          "optional": false
                        }
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "todoItem",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 79, "column": 19 },
                        "end": { "line": 79, "column": 29 }
                      },
                      "range": [2371, 2381],
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "typeName": {
                          "type": "Identifier",
                          "name": "TodoItem",
                          "range": [2373, 2381],
                          "loc": {
                            "start": { "line": 79, "column": 21 },
                            "end": { "line": 79, "column": 29 }
                          }
                        },
                        "range": [2373, 2381],
                        "loc": {
                          "start": { "line": 79, "column": 21 },
                          "end": { "line": 79, "column": 29 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["todoItem"],
            "name": "revertEdits",
            "statements": [87, 88],
            "loc": {
              "start": { "line": 86, "column": 2 },
              "end": { "line": 89, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "revertEdits" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "todos"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "indexOf"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              { "type": "Identifier", "name": "todoItem" }
                            ],
                            "optional": false
                          },
                          "computed": true,
                          "optional": false
                        },
                        "right": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "originalTodo"
                          },
                          "computed": false,
                          "optional": false
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "reverted"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "value": true,
                          "raw": "true"
                        }
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "todoItem",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 86, "column": 22 },
                        "end": { "line": 86, "column": 32 }
                      },
                      "range": [2571, 2581],
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "typeName": {
                          "type": "Identifier",
                          "name": "TodoItem",
                          "range": [2573, 2581],
                          "loc": {
                            "start": { "line": 86, "column": 24 },
                            "end": { "line": 86, "column": 32 }
                          }
                        },
                        "range": [2573, 2581],
                        "loc": {
                          "start": { "line": 86, "column": 24 },
                          "end": { "line": 86, "column": 32 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["todoItem"],
            "name": "doneEditing",
            "statements": [92, 93, 94, 98, 99, 100, 102, 96, 97, 101],
            "loc": {
              "start": { "line": 91, "column": 2 },
              "end": { "line": 103, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "doneEditing" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "editedTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "originalTodo"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "Literal",
                          "value": null,
                          "raw": "null"
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "MemberExpression",
                          "object": { "type": "ThisExpression" },
                          "property": {
                            "type": "Identifier",
                            "name": "$scope"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "reverted"
                        },
                        "computed": false,
                        "optional": false
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "MemberExpression",
                                  "object": { "type": "ThisExpression" },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$scope"
                                  },
                                  "computed": false,
                                  "optional": false
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reverted"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "right": {
                                "type": "Literal",
                                "value": null,
                                "raw": "null"
                              }
                            }
                          },
                          { "type": "ReturnStatement", "argument": null }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "todoItem"
                          },
                          "property": { "type": "Identifier", "name": "title" },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "todoItem"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "title"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "trim"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "arguments": [],
                          "optional": false
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "prefix": true,
                        "argument": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "todoItem"
                          },
                          "property": { "type": "Identifier", "name": "title" },
                          "computed": false,
                          "optional": false
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "removeTodo"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                { "type": "Identifier", "name": "todoItem" }
                              ],
                              "optional": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "todoItem",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 91, "column": 22 },
                        "end": { "line": 91, "column": 32 }
                      },
                      "range": [2716, 2726],
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "typeName": {
                          "type": "Identifier",
                          "name": "TodoItem",
                          "range": [2718, 2726],
                          "loc": {
                            "start": { "line": 91, "column": 24 },
                            "end": { "line": 91, "column": 32 }
                          }
                        },
                        "range": [2718, 2726],
                        "loc": {
                          "start": { "line": 91, "column": 24 },
                          "end": { "line": 91, "column": 32 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["todoItem"],
            "name": "removeTodo",
            "statements": [106, 107],
            "loc": {
              "start": { "line": 105, "column": 2 },
              "end": { "line": 108, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "removeTodo" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "console" },
                          "property": { "type": "Identifier", "name": "log" },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          { "type": "Identifier", "name": "todoItem" }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "splice"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "todos"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "indexOf"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              { "type": "Identifier", "name": "todoItem" }
                            ],
                            "optional": false
                          },
                          { "type": "Literal", "value": 1, "raw": "1" }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "todoItem",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 105, "column": 21 },
                        "end": { "line": 105, "column": 31 }
                      },
                      "range": [3057, 3067],
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "typeName": {
                          "type": "Identifier",
                          "name": "TodoItem",
                          "range": [3059, 3067],
                          "loc": {
                            "start": { "line": 105, "column": 23 },
                            "end": { "line": 105, "column": 31 }
                          }
                        },
                        "range": [3059, 3067],
                        "loc": {
                          "start": { "line": 105, "column": 23 },
                          "end": { "line": 105, "column": 31 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": [],
            "name": "clearDoneTodos",
            "statements": [111, 113],
            "loc": {
              "start": { "line": 110, "column": 2 },
              "end": { "line": 114, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "clearDoneTodos" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "$scope"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": { "type": "Identifier", "name": "todos" },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "MemberExpression",
                                "object": { "type": "ThisExpression" },
                                "property": {
                                  "type": "Identifier",
                                  "name": "todos"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "filter"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              {
                                "type": "ArrowFunctionExpression",
                                "generator": false,
                                "id": null,
                                "params": [
                                  { "type": "Identifier", "name": "todoItem" }
                                ],
                                "body": {
                                  "type": "UnaryExpression",
                                  "operator": "!",
                                  "prefix": true,
                                  "argument": {
                                    "type": "MemberExpression",
                                    "object": {
                                      "type": "Identifier",
                                      "name": "todoItem"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "completed"
                                    },
                                    "computed": false,
                                    "optional": false
                                  }
                                },
                                "async": false,
                                "expression": true
                              }
                            ],
                            "optional": false
                          }
                        }
                      }
                    }
                  ]
                },
                "params": []
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["completed"],
            "name": "markAll",
            "statements": [117, 119, 118],
            "loc": {
              "start": { "line": 116, "column": 2 },
              "end": { "line": 120, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "markAll" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "todos"
                            },
                            "computed": false,
                            "optional": false
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "forEach"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "todoItem" }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "todoItem"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "completed"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "completed"
                                    }
                                  }
                                }
                              ]
                            },
                            "async": false,
                            "expression": false
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "completed",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 116, "column": 19 },
                        "end": { "line": 116, "column": 28 }
                      },
                      "range": [3299, 3308],
                      "typeAnnotation": {
                        "type": "TSBooleanKeyword",
                        "range": [3301, 3308],
                        "loc": {
                          "start": { "line": 116, "column": 21 },
                          "end": { "line": 116, "column": 28 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": [],
            "name": "newMethod",
            "statements": [123],
            "loc": {
              "start": { "line": 122, "column": 2 },
              "end": { "line": 124, "column": 3 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "newMethod" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "console" },
                          "property": { "type": "Identifier", "name": "log" },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "raw": "\"This is test\"",
                            "value": "This is test"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": []
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          }
        ]
      }
    },
    {
      "filePath": "/js/directives/TodoBlur.ts",
      "data": {
        "methods": [
          {
            "params": [],
            "name": "todoBlur",
            "statements": [10, 15, 12, 13],
            "loc": {
              "start": { "line": 9, "column": 11 },
              "end": { "line": 16, "column": 5 }
            },
            "body": {
              "type": "FunctionDeclaration",
              "id": { "type": "Identifier", "name": "todoBlur" },
              "generator": false,
              "expression": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": { "type": "Identifier", "name": "link" },
                          "value": {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "$scope",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 25 },
                                    "end": { "line": 11, "column": 36 }
                                  },
                                  "range": [269, 280],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "TSQualifiedName",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ng",
                                        "range": [271, 273],
                                        "loc": {
                                          "start": { "line": 11, "column": 27 },
                                          "end": { "line": 11, "column": 29 }
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "IScope",
                                        "range": [274, 280],
                                        "loc": {
                                          "start": { "line": 11, "column": 30 },
                                          "end": { "line": 11, "column": 36 }
                                        }
                                      },
                                      "range": [271, 280],
                                      "loc": {
                                        "start": { "line": 11, "column": 27 },
                                        "end": { "line": 11, "column": 36 }
                                      }
                                    },
                                    "range": [271, 280],
                                    "loc": {
                                      "start": { "line": 11, "column": 27 },
                                      "end": { "line": 11, "column": 36 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "element",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 45 },
                                    "end": { "line": 11, "column": 53 }
                                  },
                                  "range": [289, 297],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "Identifier",
                                      "name": "JQuery",
                                      "range": [291, 297],
                                      "loc": {
                                        "start": { "line": 11, "column": 47 },
                                        "end": { "line": 11, "column": 53 }
                                      }
                                    },
                                    "range": [291, 297],
                                    "loc": {
                                      "start": { "line": 11, "column": 47 },
                                      "end": { "line": 11, "column": 53 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "attributes",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 65 },
                                    "end": { "line": 11, "column": 70 }
                                  },
                                  "range": [309, 314],
                                  "typeAnnotation": {
                                    "type": "TSAnyKeyword",
                                    "range": [311, 314],
                                    "loc": {
                                      "start": { "line": 11, "column": 67 },
                                      "end": { "line": 11, "column": 70 }
                                    }
                                  }
                                }
                              }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "element"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "bind"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "raw": "'blur'",
                                        "value": "blur"
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "generator": false,
                                        "id": null,
                                        "params": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$scope"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$apply"
                                                  },
                                                  "computed": false,
                                                  "optional": false
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "attributes"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "todoBlur"
                                                    },
                                                    "computed": false,
                                                    "optional": false
                                                  }
                                                ],
                                                "optional": false
                                              }
                                            }
                                          ]
                                        },
                                        "async": false,
                                        "expression": false
                                      }
                                    ],
                                    "optional": false
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "$scope"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "$on"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "raw": "'$destroy'",
                                        "value": "$destroy"
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "generator": false,
                                        "id": null,
                                        "params": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "element"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unbind"
                                                  },
                                                  "computed": false,
                                                  "optional": false
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "raw": "'blur'",
                                                    "value": "blur"
                                                  }
                                                ],
                                                "optional": false
                                              }
                                            }
                                          ]
                                        },
                                        "async": false,
                                        "expression": false
                                      }
                                    ],
                                    "optional": false
                                  }
                                }
                              ]
                            },
                            "async": false,
                            "expression": false
                          },
                          "computed": false,
                          "method": false,
                          "shorthand": false,
                          "kind": "init"
                        }
                      ]
                    }
                  }
                ]
              },
              "returnType": {
                "type": "TSTypeAnnotation",
                "loc": {
                  "start": { "line": 9, "column": 30 },
                  "end": { "line": 9, "column": 45 }
                },
                "range": [209, 224],
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "TSQualifiedName",
                    "left": {
                      "type": "Identifier",
                      "name": "ng",
                      "range": [211, 213],
                      "loc": {
                        "start": { "line": 9, "column": 32 },
                        "end": { "line": 9, "column": 34 }
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "IDirective",
                      "range": [214, 224],
                      "loc": {
                        "start": { "line": 9, "column": 35 },
                        "end": { "line": 9, "column": 45 }
                      }
                    },
                    "range": [211, 224],
                    "loc": {
                      "start": { "line": 9, "column": 32 },
                      "end": { "line": 9, "column": 45 }
                    }
                  },
                  "range": [211, 224],
                  "loc": {
                    "start": { "line": 9, "column": 32 },
                    "end": { "line": 9, "column": 45 }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "filePath": "/js/directives/TodoEscape.ts",
      "data": {
        "methods": [
          {
            "params": [],
            "name": "todoEscape",
            "statements": [12, 22, 14, 18, 20, 15, 17, 16],
            "loc": {
              "start": { "line": 11, "column": 8 },
              "end": { "line": 23, "column": 2 }
            },
            "body": {
              "type": "FunctionDeclaration",
              "id": { "type": "Identifier", "name": "todoEscape" },
              "generator": false,
              "expression": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": { "type": "Identifier", "name": "link" },
                          "value": {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "$scope",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 13, "column": 16 },
                                    "end": { "line": 13, "column": 27 }
                                  },
                                  "range": [252, 263],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "TSQualifiedName",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ng",
                                        "range": [254, 256],
                                        "loc": {
                                          "start": { "line": 13, "column": 18 },
                                          "end": { "line": 13, "column": 20 }
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "IScope",
                                        "range": [257, 263],
                                        "loc": {
                                          "start": { "line": 13, "column": 21 },
                                          "end": { "line": 13, "column": 27 }
                                        }
                                      },
                                      "range": [254, 263],
                                      "loc": {
                                        "start": { "line": 13, "column": 18 },
                                        "end": { "line": 13, "column": 27 }
                                      }
                                    },
                                    "range": [254, 263],
                                    "loc": {
                                      "start": { "line": 13, "column": 18 },
                                      "end": { "line": 13, "column": 27 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "element",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 13, "column": 36 },
                                    "end": { "line": 13, "column": 44 }
                                  },
                                  "range": [272, 280],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "Identifier",
                                      "name": "JQuery",
                                      "range": [274, 280],
                                      "loc": {
                                        "start": { "line": 13, "column": 38 },
                                        "end": { "line": 13, "column": 44 }
                                      }
                                    },
                                    "range": [274, 280],
                                    "loc": {
                                      "start": { "line": 13, "column": 38 },
                                      "end": { "line": 13, "column": 44 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "attributes",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 13, "column": 56 },
                                    "end": { "line": 13, "column": 61 }
                                  },
                                  "range": [292, 297],
                                  "typeAnnotation": {
                                    "type": "TSAnyKeyword",
                                    "range": [294, 297],
                                    "loc": {
                                      "start": { "line": 13, "column": 58 },
                                      "end": { "line": 13, "column": 61 }
                                    }
                                  }
                                }
                              }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "element"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "bind"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "raw": "'keydown'",
                                        "value": "keydown"
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "generator": false,
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "keyCode"
                                                  },
                                                  "computed": false,
                                                  "optional": false
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "ESCAPE_KEY"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$scope"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "$apply"
                                                        },
                                                        "computed": false,
                                                        "optional": false
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "attributes"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "todoEscape"
                                                          },
                                                          "computed": false,
                                                          "optional": false
                                                        }
                                                      ],
                                                      "optional": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "async": false,
                                        "expression": false
                                      }
                                    ],
                                    "optional": false
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "$scope"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "$on"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "raw": "'$destroy'",
                                        "value": "$destroy"
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "generator": false,
                                        "id": null,
                                        "params": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "element"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unbind"
                                                  },
                                                  "computed": false,
                                                  "optional": false
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "raw": "'keydown'",
                                                    "value": "keydown"
                                                  }
                                                ],
                                                "optional": false
                                              }
                                            }
                                          ]
                                        },
                                        "async": false,
                                        "expression": false
                                      }
                                    ],
                                    "optional": false
                                  }
                                }
                              ]
                            },
                            "async": false,
                            "expression": false
                          },
                          "computed": false,
                          "method": false,
                          "shorthand": false,
                          "kind": "init"
                        }
                      ]
                    }
                  }
                ]
              },
              "returnType": {
                "type": "TSTypeAnnotation",
                "loc": {
                  "start": { "line": 11, "column": 29 },
                  "end": { "line": 11, "column": 44 }
                },
                "range": [207, 222],
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "TSQualifiedName",
                    "left": {
                      "type": "Identifier",
                      "name": "ng",
                      "range": [209, 211],
                      "loc": {
                        "start": { "line": 11, "column": 31 },
                        "end": { "line": 11, "column": 33 }
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "IDirective",
                      "range": [212, 222],
                      "loc": {
                        "start": { "line": 11, "column": 34 },
                        "end": { "line": 11, "column": 44 }
                      }
                    },
                    "range": [209, 222],
                    "loc": {
                      "start": { "line": 11, "column": 31 },
                      "end": { "line": 11, "column": 44 }
                    }
                  },
                  "range": [209, 222],
                  "loc": {
                    "start": { "line": 11, "column": 31 },
                    "end": { "line": 11, "column": 44 }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "filePath": "/js/directives/TodoFocus.ts",
      "data": {
        "methods": [
          {
            "params": ["$timeout"],
            "name": "todoFocus",
            "statements": [10, 18, 12, 16, 13, 15, 14],
            "loc": {
              "start": { "line": 9, "column": 8 },
              "end": { "line": 19, "column": 2 }
            },
            "body": {
              "type": "FunctionDeclaration",
              "id": { "type": "Identifier", "name": "todoFocus" },
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "$timeout",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "loc": {
                      "start": { "line": 9, "column": 35 },
                      "end": { "line": 9, "column": 55 }
                    },
                    "range": [228, 248],
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "TSQualifiedName",
                        "left": {
                          "type": "Identifier",
                          "name": "ng",
                          "range": [230, 232],
                          "loc": {
                            "start": { "line": 9, "column": 37 },
                            "end": { "line": 9, "column": 39 }
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "ITimeoutService",
                          "range": [233, 248],
                          "loc": {
                            "start": { "line": 9, "column": 40 },
                            "end": { "line": 9, "column": 55 }
                          }
                        },
                        "range": [230, 248],
                        "loc": {
                          "start": { "line": 9, "column": 37 },
                          "end": { "line": 9, "column": 55 }
                        }
                      },
                      "range": [230, 248],
                      "loc": {
                        "start": { "line": 9, "column": 37 },
                        "end": { "line": 9, "column": 55 }
                      }
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": { "type": "Identifier", "name": "link" },
                          "value": {
                            "type": "ArrowFunctionExpression",
                            "generator": false,
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "$scope",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 16 },
                                    "end": { "line": 11, "column": 27 }
                                  },
                                  "range": [294, 305],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "TSQualifiedName",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ng",
                                        "range": [296, 298],
                                        "loc": {
                                          "start": { "line": 11, "column": 18 },
                                          "end": { "line": 11, "column": 20 }
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "IScope",
                                        "range": [299, 305],
                                        "loc": {
                                          "start": { "line": 11, "column": 21 },
                                          "end": { "line": 11, "column": 27 }
                                        }
                                      },
                                      "range": [296, 305],
                                      "loc": {
                                        "start": { "line": 11, "column": 18 },
                                        "end": { "line": 11, "column": 27 }
                                      }
                                    },
                                    "range": [296, 305],
                                    "loc": {
                                      "start": { "line": 11, "column": 18 },
                                      "end": { "line": 11, "column": 27 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "element",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 36 },
                                    "end": { "line": 11, "column": 44 }
                                  },
                                  "range": [314, 322],
                                  "typeAnnotation": {
                                    "type": "TSTypeReference",
                                    "typeName": {
                                      "type": "Identifier",
                                      "name": "JQuery",
                                      "range": [316, 322],
                                      "loc": {
                                        "start": { "line": 11, "column": 38 },
                                        "end": { "line": 11, "column": 44 }
                                      }
                                    },
                                    "range": [316, 322],
                                    "loc": {
                                      "start": { "line": 11, "column": 38 },
                                      "end": { "line": 11, "column": 44 }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "attributes",
                                "typeAnnotation": {
                                  "type": "TSTypeAnnotation",
                                  "loc": {
                                    "start": { "line": 11, "column": 56 },
                                    "end": { "line": 11, "column": 61 }
                                  },
                                  "range": [334, 339],
                                  "typeAnnotation": {
                                    "type": "TSAnyKeyword",
                                    "range": [336, 339],
                                    "loc": {
                                      "start": { "line": 11, "column": 58 },
                                      "end": { "line": 11, "column": 61 }
                                    }
                                  }
                                }
                              }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "Identifier",
                                        "name": "$scope"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "$watch"
                                      },
                                      "computed": false,
                                      "optional": false
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "object": {
                                          "type": "Identifier",
                                          "name": "attributes"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "todoFocus"
                                        },
                                        "computed": false,
                                        "optional": false
                                      },
                                      {
                                        "type": "ArrowFunctionExpression",
                                        "generator": false,
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "newval"
                                          }
                                        ],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "newval"
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "$timeout"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrowFunctionExpression",
                                                          "generator": false,
                                                          "id": null,
                                                          "params": [],
                                                          "body": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 0,
                                                                  "raw": "0"
                                                                },
                                                                "computed": true,
                                                                "optional": false
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "focus"
                                                              },
                                                              "computed": false,
                                                              "optional": false
                                                            },
                                                            "arguments": [],
                                                            "optional": false
                                                          },
                                                          "async": false,
                                                          "expression": true
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0,
                                                          "raw": "0"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false,
                                                          "raw": "false"
                                                        }
                                                      ],
                                                      "optional": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "async": false,
                                        "expression": false
                                      }
                                    ],
                                    "optional": false
                                  }
                                }
                              ]
                            },
                            "async": false,
                            "expression": false
                          },
                          "computed": false,
                          "method": false,
                          "shorthand": false,
                          "kind": "init"
                        }
                      ]
                    }
                  }
                ]
              },
              "returnType": {
                "type": "TSTypeAnnotation",
                "loc": {
                  "start": { "line": 9, "column": 56 },
                  "end": { "line": 9, "column": 71 }
                },
                "range": [249, 264],
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "TSQualifiedName",
                    "left": {
                      "type": "Identifier",
                      "name": "ng",
                      "range": [251, 253],
                      "loc": {
                        "start": { "line": 9, "column": 58 },
                        "end": { "line": 9, "column": 60 }
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "IDirective",
                      "range": [254, 264],
                      "loc": {
                        "start": { "line": 9, "column": 61 },
                        "end": { "line": 9, "column": 71 }
                      }
                    },
                    "range": [251, 264],
                    "loc": {
                      "start": { "line": 9, "column": 58 },
                      "end": { "line": 9, "column": 71 }
                    }
                  },
                  "range": [251, 264],
                  "loc": {
                    "start": { "line": 9, "column": 58 },
                    "end": { "line": 9, "column": 71 }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      "filePath": "/js/models/TodoItem.ts",
      "data": {
        "className": "TodoItem",
        "methods": [
          {
            "params": [],
            "name": "constructor",
            "statements": [],
            "loc": {
              "start": { "line": 7, "column": 8 },
              "end": { "line": 10, "column": 17 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "constructor" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "public",
                    "parameter": {
                      "type": "Identifier",
                      "name": "title",
                      "typeAnnotation": {
                        "type": "TSTypeAnnotation",
                        "loc": {
                          "start": { "line": 8, "column": 24 },
                          "end": { "line": 8, "column": 32 }
                        },
                        "range": [144, 152],
                        "typeAnnotation": {
                          "type": "TSStringKeyword",
                          "range": [146, 152],
                          "loc": {
                            "start": { "line": 8, "column": 26 },
                            "end": { "line": 8, "column": 32 }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "TSParameterProperty",
                    "accessibility": "public",
                    "parameter": {
                      "type": "Identifier",
                      "name": "completed",
                      "typeAnnotation": {
                        "type": "TSTypeAnnotation",
                        "loc": {
                          "start": { "line": 9, "column": 28 },
                          "end": { "line": 9, "column": 37 }
                        },
                        "range": [182, 191],
                        "typeAnnotation": {
                          "type": "TSBooleanKeyword",
                          "range": [184, 191],
                          "loc": {
                            "start": { "line": 9, "column": 30 },
                            "end": { "line": 9, "column": 37 }
                          }
                        }
                      }
                    }
                  }
                ],
                "generator": false,
                "expression": false,
                "async": false,
                "body": { "type": "BlockStatement", "body": [] }
              },
              "computed": false,
              "static": false,
              "kind": "constructor"
            }
          }
        ]
      }
    },
    {
      "filePath": "/js/services/TodoStorage.ts",
      "data": {
        "className": "TodoStorage",
        "methods": [
          {
            "params": [],
            "name": "get",
            "statements": [14],
            "loc": {
              "start": { "line": 13, "column": 8 },
              "end": { "line": 15, "column": 9 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "get" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": { "type": "Identifier", "name": "JSON" },
                          "property": { "type": "Identifier", "name": "parse" },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "localStorage"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "getItem"
                                },
                                "computed": false,
                                "optional": false
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "object": { "type": "ThisExpression" },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "STORAGE_ID"
                                  },
                                  "computed": false,
                                  "optional": false
                                }
                              ],
                              "optional": false
                            },
                            "right": {
                              "type": "Literal",
                              "raw": "'[]'",
                              "value": "[]"
                            }
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": [],
                "returnType": {
                  "type": "TSTypeAnnotation",
                  "loc": {
                    "start": { "line": 13, "column": 14 },
                    "end": { "line": 13, "column": 26 }
                  },
                  "range": [278, 290],
                  "typeAnnotation": {
                    "type": "TSArrayType",
                    "elementType": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "TodoItem",
                        "range": [280, 288],
                        "loc": {
                          "start": { "line": 13, "column": 16 },
                          "end": { "line": 13, "column": 24 }
                        }
                      },
                      "range": [280, 288],
                      "loc": {
                        "start": { "line": 13, "column": 16 },
                        "end": { "line": 13, "column": 24 }
                      }
                    },
                    "range": [280, 290],
                    "loc": {
                      "start": { "line": 13, "column": 16 },
                      "end": { "line": 13, "column": 26 }
                    }
                  }
                }
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          },
          {
            "params": ["todos"],
            "name": "put",
            "statements": [18],
            "loc": {
              "start": { "line": 17, "column": 8 },
              "end": { "line": 19, "column": 9 }
            },
            "body": {
              "type": "MethodDefinition",
              "key": { "type": "Identifier", "name": "put" },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "localStorage"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "setItem"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "object": { "type": "ThisExpression" },
                            "property": {
                              "type": "Identifier",
                              "name": "STORAGE_ID"
                            },
                            "computed": false,
                            "optional": false
                          },
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "JSON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "stringify"
                              },
                              "computed": false,
                              "optional": false
                            },
                            "arguments": [
                              { "type": "Identifier", "name": "todos" }
                            ],
                            "optional": false
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "todos",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "loc": {
                        "start": { "line": 17, "column": 17 },
                        "end": { "line": 17, "column": 29 }
                      },
                      "range": [399, 411],
                      "typeAnnotation": {
                        "type": "TSArrayType",
                        "elementType": {
                          "type": "TSTypeReference",
                          "typeName": {
                            "type": "Identifier",
                            "name": "TodoItem",
                            "range": [401, 409],
                            "loc": {
                              "start": { "line": 17, "column": 19 },
                              "end": { "line": 17, "column": 27 }
                            }
                          },
                          "range": [401, 409],
                          "loc": {
                            "start": { "line": 17, "column": 19 },
                            "end": { "line": 17, "column": 27 }
                          }
                        },
                        "range": [401, 411],
                        "loc": {
                          "start": { "line": 17, "column": 19 },
                          "end": { "line": 17, "column": 29 }
                        }
                      }
                    }
                  }
                ]
              },
              "computed": false,
              "static": false,
              "kind": "method"
            }
          }
        ]
      }
    }
  ]
}
